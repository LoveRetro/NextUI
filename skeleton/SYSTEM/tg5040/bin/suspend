#!/bin/sh
set -euo pipefail
exec 0<&-

wifid_running=
hciattach_running=
bluetoothd_running=

asound_state_dir=/tmp/asound-suspend

before() {
	>&2 echo "Preparing for suspend..."

    # for f in $(find /sys/devices/platform/soc/7081400.s_twi/i2c-6/6-0034/ -name wakeup); do
    #     echo "Disabling wakeup in $f"
    #     echo disabled > "$f"
    # done

	>&2 echo "Saving mixer state..."
	mkdir -p "$asound_state_dir"
	alsactl --file "$asound_state_dir/asound.state.pre" store || true

	if pgrep hciattach; then
		hciattach_running=1
		>&2 echo "Stopping hciattach..."
		/etc/init.d/hciattach stop || true
	fi
	if pgrep bluetoothd; then
		bluetoothd_running=1
		>&2 echo "Stopping bluetoothd..."
		/etc/bluetooth/bluetoothd stop || true
		killall -15 bluealsa || true
	fi

	if pgrep wifi_daemon; then
		wifid_running=1
		>&2 echo "Stopping wifi_daemon..."
		killall -q wifi_daemon || true
	fi

	>&2 echo "Blocking wireless..."
	rfkill block wifi || true
}

after() {
	>&2 echo "Resumed from suspend."

    # for f in $(find /sys/devices/platform/soc/7081400.s_twi/i2c-6/6-0034/ -name wakeup); do
    #     echo "Enabling wakeup in $f"
    #     echo enabled > "$f"
    # done

	>&2 echo "Restoring mixer state..."
	alsactl --file "$asound_state_dir/asound.state.post" store || true
	alsactl --file "$asound_state_dir/asound.state.pre" restore || true

	if [ -n "$hciattach_running" ]; then
		>&2 echo "Starting hciattach..."
		/etc/init.d/hciattach start || true
	fi
	if [ -n "$bluetoothd_running" ]; then
		>&2 echo "Starting bluetoothd..."
		/etc/bluetooth/bluetoothd start || true
		/usr/bin/bluetoothctl power on || true
	fi

	>&2 echo "Unblocking wireless..."
	rfkill unblock wifi || true

	if [ -n "$wifid_running" ]; then
		>&2 echo "Starting wifi_daemon..."
		/mnt/SDCARD/.system/tg5040/bin/wifi_daemon &
	fi
}

before

>&2 echo "Suspending..."
# sync
echo mem >/sys/power/state

# Resume services in background to reduce UI latency
after
