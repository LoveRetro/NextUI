---
name: CI

# yamllint disable-line rule:truthy
on:
  push:
    branches:
      - main
      - build-in-ci
  pull_request: {}

jobs:
  core-matrix:
    runs-on: ubuntu-24.04-arm
    env:
      PLATFORM: ${{ matrix.toolchain }}
    outputs:
      cores: ${{ steps.cores.outputs.cores }}
    strategy:
      fail-fast: false
      matrix:
        toolchain:
          - tg5040

    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2

      - name: Generate cores matrix
        id: cores
        run: |
          CORES="$(make cores-json)"
          echo "cores=$CORES" >> $GITHUB_OUTPUT

  build-core:
    needs: core-matrix
    runs-on: ubuntu-24.04-arm
    env:
      PLATFORM: ${{ matrix.toolchain }}
    strategy:
      fail-fast: false
      matrix:
        toolchain:
          - tg5040
        core: ${{ fromJson(needs.core-matrix.outputs.cores) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2

      - name: Setup
        run: make setup

      - name: Build ${{ matrix.core }} core
        run: make build-core CORE=${{ matrix.core }}

      - name: Upload core
        uses: actions/upload-artifact@v4.6.2
        with:
          name: core-${{ matrix.toolchain }}-${{ matrix.core }}.zip
          path: workspace/${{ env.PLATFORM }}/cores/output/

  build:
    needs: build-core
    runs-on: ubuntu-24.04-arm
    env:
      PLATFORM: ${{ matrix.toolchain }}
      RELEASE_FILENAME: NextUI-${{ matrix.toolchain }}
    strategy:
      fail-fast: false
      matrix:
        toolchain:
          - tg5040

    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y zipmerge

      - name: Setup
        run: make setup

      - name: Download Cores
        uses: actions/download-artifact@v4.3.0
        with:
          path: workspace/${{ env.PLATFORM }}/cores/output/
          pattern: core-${{ matrix.toolchain }}-*
          merge-multiple: true

      - name: Build
        run: make ${{ matrix.toolchain }}

      - name: Special
        run: make special

      - name: Package
        run: make package

      - name: List Generated Files
        run: ls -l releases

      - name: Upload All
        uses: actions/upload-artifact@v4.6.2
        with:
          name: ${{ env.RELEASE_FILENAME }}-all.zip
          path: releases/${{ env.RELEASE_FILENAME }}-all.zip

      - name: Upload Base
        uses: actions/upload-artifact@v4.6.2
        with:
          name: ${{ env.RELEASE_FILENAME }}-base.zip
          path: releases/${{ env.RELEASE_FILENAME }}-base.zip

      - name: Upload Extras
        uses: actions/upload-artifact@v4.6.2
        with:
          name: ${{ env.RELEASE_FILENAME }}-extras.zip
          path: releases/${{ env.RELEASE_FILENAME }}-extras.zip

      - name: Attest Build Provenance
        uses: actions/attest-build-provenance@v2.3.0
        with:
          subject-path: |
            releases/${{ env.RELEASE_FILENAME }}-all.zip
            releases/${{ env.RELEASE_FILENAME }}-base.zip
            releases/${{ env.RELEASE_FILENAME }}-extras.zip
